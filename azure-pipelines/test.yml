parameters:
  - name: installDotNet
    type: boolean
  - name: installAdditionalLinuxDependencies
    type: boolean
    default: false
  - name: npmCommand
    type: string

steps:
- checkout: self
  clean: true
  submodules: true
  fetchTags: false
  fetchDepth: 1

- template: prereqs.yml
  parameters:
    installDotNet: ${{ parameters.installDotNet }}

- ${{ if eq(parameters.installAdditionalLinuxDependencies, true) }}:
  - template: test-linux-docker-prereqs.yml

- template: test-prereqs.yml
  parameters:
    installAdditionalLinuxDependencies: ${{ parameters.installAdditionalLinuxDependencies }}

- script: npm run ${{ parameters.npmCommand }}
  displayName: ðŸ§ª Run $(Agent.JobName)
  env:
    DISPLAY: :99.0

- task: PublishTestResults@2
  condition: succeededOrFailed()
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '*junit.xml'
    searchFolder: '$(Build.SourcesDirectory)/out'
    publishRunAttachments: true
    mergeTestResults: true
    testRunTitle: $(System.StageDisplayName) $(Agent.JobName) (Attempt $(System.JobAttempt))

- task: PublishPipelineArtifact@1
  condition: failed()
  displayName: 'Upload integration test logs'
  inputs:
    targetPath: '$(Build.SourcesDirectory)/out/logs'
    artifactName: 'Test Logs ($(System.StageDisplayName)-$(Agent.JobName)-$(System.JobAttempt))'
